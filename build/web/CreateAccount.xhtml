<?xml version="1.0" encoding="UTF-8"?>
<!--
Created by Sait Tuna Onder on 2017.08.25 
Copyright Â© 2017 Sait Tun Onder. All rights reserved.
-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:p="http://primefaces.org/ui">

    <!-- Do not enter tags before the composition line since they are ignored by JSF -->

    <!-- This page is constructed based on the siteTemplate -->
    <ui:composition template="templates/siteTemplate.xhtml">

        <ui:define name="title">
            <!-- Set the page title -->
            <h:outputText value="Create Account"></h:outputText>
        </ui:define>

        <!-- Create the content for this page below -->
        <ui:define name="editableContent">

            <div align="center" style="width:50%; margin:0 auto;">

                <!-- Error messages will be shown here if any  -->
                <p:messages id="msgs" showIcon="false"/>
                <h:outputLabel id="form-error-message" class="errorMessages" value="#{accountManager.statusMessage}"/>

                <h:form id="AccountCreationForm">

                    <h2>Create an Account</h2>

                    <!-- f:event allows ComponentSystemEventListener instances on a UI component in a JSF page. 
                    The following f:event assigns an event listener with the UI component "form" - AccountCreationForm.
                    
                    type="postValidate" directs the listener event to invoke the accountManager.validateInformation method
                    AFTER the UI component "form" is validated with the validation statements included below.
                    -->
                    <f:event listener="#{accountManager.validateInformation}" type="postValidate"/>

                    <p:panelGrid columns="2" columnClasses="accountColumn1, accountColumn2">

                        <!-- FIRST NAME -->
                        <p:outputLabel value="First Name: " for="firstName" />
                        <p:inputText id="firstName" value="#{accountManager.firstName}" required="true" styleClass="accountInputTextField"
                                     requiredMessage="#{bundle.CreateUserRequiredMessage_firstName}" label="First Name">
                            <f:validateLength minimum="2" />
                        </p:inputText>   

                        <!-- LAST NAME -->
                        <p:outputLabel value="Last Name:" for="lastName" />
                        <p:inputText id="lastName" value="#{accountManager.lastName}" required="true" styleClass="accountInputTextField"
                                     requiredMessage="#{bundle.CreateUserRequiredMessage_lastName}" label="Last Name">
                            <f:validateLength minimum="2" />
                        </p:inputText>

                        <!-- EMAIL ADDRESS -->
                        <p:outputLabel value="#{bundle.CreateUserLabel_email}" for="email" />
                        <p:inputText id="email" value="#{accountManager.email}" required="true" styleClass="accountInputTextField"
                                     requiredMessage="#{bundle.CreateUserRequiredMessage_email}" label="Email">
                            <f:validateLength minimum="2" />
                             Execute the "validate" method in the "EmailValidator.java" class file to validate the email address entered. 
                            <f:validator validatorId="emailValidator" />  
                        </p:inputText>

                        <!-- ACCOUNT PASSWORD -->
<!--                        <h:outputLabel value="Password *" for="password" />
                        <p:password id="password" value="#{accountManager.password}" feedback="true" required="true" styleClass="accountInputTextField">
                             Execute the "validate" method in the "PasswordValidator.java" class file to validate the password entered. 
                            <f:validator validatorId="passwordValidator" /> 
                        </p:password>

                         CONFIRM PASSWORD 
                        <h:outputLabel value="Confirm Password: *" for="confirmPassword" />
                        <p:password id="confirmPassword" value="ToBeReadFromThisFieldByAccountManager" required="true" 
                                    styleClass="accountInputTextField"/>-->

                    </p:panelGrid>
                    <br />
                    
                    <p:commandButton id="Submit" value="Submit" action="#{accountManager.createAccount()}" 
                                     styleClass="commandButton" ajax="false" icon="ui-icon-extlink" />
                    &nbsp;&nbsp;
                    <p:button outcome="index" value="Cancel" icon="ui-icon-cancel" styleClass="commandButton" />

                </h:form>
            </div>
        </ui:define>

    </ui:composition>
    <!-- Do not enter tags after the composition line since they are ignored by JSF -->

</html>
